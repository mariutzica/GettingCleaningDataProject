num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name=c(my_char,"Maria")
my_name
paste(my_char,collapse=" ")
paste(my_name,collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect1,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,nrow=5)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
library(swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
pwd
pwd()
cwd()
cwd
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
3L
L
?search
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list<-sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class
)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hp_mean<-tapply(mtcars$hp, mtcars$cyl, mean)
length(hp_mean)
hp_mean[3]-hp_mean[2]
hp_mean[[3]]-hp_mean[[2]]
hp_mean[[3]]-hp_mean[[1]]
tapply(iris$Sepal.Length,iris$Species,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
heat(plants,10)
head(plants,10)
tail(plants,`5)
tail(plants,15)
''
`
}
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(y=cars$speed,x=cars$dist)
plot(y=cars$speed,x=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl,data=mtcars)
his(mtcars$mpg)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
x
e <- rnorm(10, 0, 20)
e
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?nlme
?BodyWeight
?lattice
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?qplot
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
prefix<-"UCI HAR Dataset//"
filename<-paste(prefix,"activity_labels.txt",sep="")
activity.labels<-read.table(filename)
filename<-paste(prefix,"features.txt",sep="")
features<-read.table(filename)
setwd("Getting and Cleaning Data//Project")
prefix<-"UCI HAR Dataset//"
filename<-paste(prefix,"activity_labels.txt",sep="")
activity.labels<-read.table(filename)
filename<-paste(prefix,"features.txt",sep="")
features<-read.table(filename)
library(data.table) #load data.table for fread
##get training data
prefix.train<-paste(prefix,"train//",sep="")
subject.train<-read.table(paste(prefix.train,"subject_train.txt",sep=""))
y.train<-read.table(paste(prefix.train,"y_train.txt",sep=""))
x.train<-read.table(paste(prefix.train,"X_train.txt",sep=""))
prefix.train<-paste(prefix,"train//Inertial Signal//",sep="")
prefix.train<-paste(prefix,"train//Inertial Signals//",sep="")
filelist = list.files(pattern = paste(prefix.train,".*.txt",sep=""))
filelist = list.files(pattern = paste(prefix.train,"*.txt",sep=""))
paste(prefix.train,"*.txt",sep="")
getwd()
?list.files
list.files(pattern = paste(prefix.train,"*.txt",sep=""))
list.files(paste(prefix.train,"*.txt",sep=""))
list.files(prefix.train,sep=""))
list.files(prefix.train,sep="")
list.files(prefix.train)
list.files(prefix.train,pattern=paste(prefix.train,"*.txt",sep=""))
list.files(prefix.train,pattern="*.txt")
filelist<-list.files(prefix.train,pattern="*.txt")
filelist<-list.files(prefix.train,pattern="*.txt",include.dirs = T)
filelist<-list.files(pattern=paste(prefix.train,"*.txt",sep=""),include.dirs = T)
filelist<-list.files(prefix.train,pattern="*.txt")
paste(prefix.train,filelist,sep=)
paste(prefix.train,filelist,sep="")
datalist<-lapply(paste(prefix.train,filelist,sep=""),fun=read.table)
datalist<-lapply(paste(prefix.train,filelist,sep=""),FUN=read.table)
data.train <- do.call("rbind", datalist)
?rbind
data.train <- rbindlist(datalist,use.names=T)
str(datalist)
data.train <- lapply(paste(prefix.train,filelist,sep=""),FUN=read.table)
prefix.test<-paste(prefix,"test//",sep="")
subject.test<-read.table(paste(prefix.test,"subject_test.txt",sep=""))
y.test<-read.table(paste(prefix.test,"y_test.txt",sep=""))
x.test<-read.table(paste(prefix.test,"X_test.txt",sep=""))
prefix.test<-paste(prefix,"test//Inertial Signals//",sep="")
filelist<-list.files(prefix.test,pattern="*.txt")
data.test<-lapply(paste(prefix.test,filelist,sep=""),FUN=read.table)
features
names(x.test)<-features[,2]
names(x.train)<-features[,2]
names(subject.test)
names(x.test.test)
names(x.test)
names(y.test)
head(y.test)
head(subject.test)
names(subject.test)<-"Subject ID"
names(subject.train)<-"Subject ID"
names(y.test)<-"Activity"
names(y.train)<-"Activity"
?join
testdata<-merge(subject.test,y.test)
View(y.train)
?clear
?rm
rm(testdata)
rm(datalist)
?rbind
?list
?rbind
cbind(y.test,subject.test)
testdata<-cbind(subject.test,y.test,x.test)
traindata<-cbind(subject.train,y.test,x.train)
traindata<-cbind(subject.train,y.train,x.train)
2947+7352
merge(testdata,traindata)
alldata<-rbind(testdata,traindata)
summary(data.test)
summary(data.test[1])
summary(data.test[[1]])
str(data.test[[1]])
dim(data.test[[1]])
names(alldata)
head(data.test[[1]])
head(alldata)
names(alldata)
activity.labels
alldata$Activity<-factor(alldata$Activity,levels=activity.labels[,1],labels=activity.labels[,2])
str(alldata$Activity)
?select
library(dplyr)
?select
names(select(alldata,contains("mean"))
)
names(alldata)
unique(names(alldata))
unique(features)
unique(features[,2])
names(select(alldata,contains("mean()"))
)
names(select(alldata,ends_with("mean()")))
grepl("mean()",names(alldata))
features[grepl("mean()",features[,2]),2]
unique(features[grepl("mean()",features[,2]),2])
?grepl
unique(features[grepl("mean()",features[,2]),2],fixed=T)
unique(features[grep("mean()",features[,2]),2],fixed=T)
?select
?ends_whi
?ends_with
names(select(alldata,matches("mean()")))
names(select(alldata,-contains("meanFreq()")))
names(select(alldata,contains("mean\(\)")))
names(select(alldata,contains("mean\\(\\)")))
names(select(alldata,contains("mean\(")))
iris <- tbl_df(iris) # so it prints a little nicer
names(iris)
select(iris, matches(".t."))
select(iris, matches("."))
select(iris, matches(".t"))
select(iris, ends_with("th()"))
select(iris, ends_with("th"))
names(select(alldata,contains("mean()")))
duplicated(names(alldata))
names(alldata)[duplicated(names(alldata))]
names(select(alldata,-contains("bandsEnergy()")))
grepl("bandEnergy()",names(alldata))
names(alldata[grepl("bandsEnergy()",names(alldata))]
)
names(alldata)[grepl("bandsEnergy()",names(alldata))]
index<-grepl("mean\(\)",names(alldata))
filtered.data<-alldata[,!grepl("bandsEnergy()",names(alldata))]
names(select(filtered.data,contains("mean()")))
filtered.data<-names(select(filtered.data,contains("mean()")))
filtered.data<-select(filtered.data,contains("mean()"))
filtered.data<-alldata[,!grepl("bandsEnergy()",names(alldata))]
filtered.data<-select(filtered.data,contains("mean()"))
filtered.data<-select(filtered.data,contains("mean()"|"std"))
filtered.data<-alldata[,!grepl("bandsEnergy()",names(alldata))]
filtered.data<-cbind(filtered.data[,2],select(filtered.data,contains("mean()")),select(filtered.data,contains("std()")))
names(filtered.data)
class(filtered.data)
str(filtered.data)
filtered.data<-alldata[,!grepl("bandsEnergy()",names(alldata))]
filtered.data<-cbind(filtered.data[,1:2],select(filtered.data,contains("mean()")),select(filtered.data,contains("std()")))
str(filtered.data)
?arrange
filtered.data<-arrange(filtered.data,"Subject ID","Activity")
filtered.data<-arrange(filtered.data,filtered.data$Subject ID,filtered.data$Activity)
filtered.data<-arrange(filtered.data,filtered.data$Subject ID,filtered.data$Activity)
names(filtered.data)[1]<-Subject.ID
names(filtered.data)[1]<-"Subject.ID"
filtered.data<-arrange(filtered.data,filtered.data$Subject.ID,filtered.data$Activity)
filtered.data$Subject.ID<-factor(filtered.data$Subject.ID)
filtered.data<-arrange(filtered.data,filtered.data$Subject.ID,filtered.data$Activity)
str(filtered.data)
filtered.data<-arrange(filtered.data,Subject.ID,Activity)
str(filtered.data)
filtered.data$Subject.ID<-as.numeric(filtered.data$Subject.ID)
filtered.data<-arrange(filtered.data,Subject.ID,Activity)
?split
ddply(filtered.data, .(Subject.ID, Activity), function(y) mean(y$Activity))
library(plyr)
ddply(filtered.data, .(Subject.ID, Activity), function(y) mean(y$Activity))
interaction(filtered.data$Activity,filtered.data$Subject.ID)
filtered.data[,"id.activity"]<-interaction(filtered.data$Subject.ID,filtered.data$Activity)
?do.call
by(filtered.data[,3:68],INDICES = filtered.data$id.activity,FUN=mean)
warnings()
sum(is.na(filtered.data[,3]))
sum(is.na(filtered.data[,4]))
sum(is.na(filtered.data[,5]))
by(filtered.data[,3],INDICES = filtered.data$id.activity,FUN=mean)
by(filtered.data[,3:4],INDICES = filtered.data$id.activity,FUN=mean)
by(filtered.data[,3:4],INDICES = filtered.data$id.activity,FUN=mean,drop=T)
warnings()
by(filtered.data[,3:4],INDICES = filtered.data$id.activity,FUN=mean,drop=T,simplify=F)
by(filtered.data[,4],INDICES = filtered.data$id.activity,FUN=mean)
a<-by(filtered.data[,4],INDICES = filtered.data$id.activity,FUN=mean)
a<-sapply(split(filtered.data[,4:68],filtered.data$id.activity),mean)
a<-sapply(split(filtered.data[,4],filtered.data$id.activity),mean)
tapply(filtered.data[,3],filtered.data$id.activity),mean)
tapply(filtered.data[,3],filtered.data$id.activity,mean)
a<-tapply(filtered.data[,3],filtered.data$id.activity,mean)
UCI.HAR.tidy<-levels(filtered.data[,69])
head(a)
for (i in 3:68) {
UCI.HAR.tidy[,names(filtered.data)[i]]<-tapply(filtered.data[,i],filtered.data$id.activity),mean)
}
for (i in 3:68) {
UCI.HAR.tidy[,names(filtered.data)[i]]<-tapply(filtered.data[,i],filtered.data$id.activity,mean)
}
tapply(filtered.data[,3],filtered.data$id.activity),mean)
tapply(filtered.data[,3],filtered.data$id.activity,mean)
rm UCI.HAR.tidy
rm(UCI.HAR.tidy)
UCI.HAR.tidy<-data.frame("id.activity"=levels(filtered.data[,69]))
for (i in 3:68) {
UCI.HAR.tidy[,names(filtered.data)[i]]<-tapply(filtered.data[,i],filtered.data$id.activity,mean)
}
names(UCI.HAR.tidy)
rm(UCI.HAR.tidy)
levels(filtered.data$id.activity)
?gl
gl(30,6,activity.labels[,2])
gl(30,6)
gl(30,1,6)
gl(30,1,30)
gl(30,1,180)
gl(6,30)
gl(6,30,labels=activity.labels[,2])
UCI.HAR.tidy<-data.frame("Subject.ID"=gl(30,1,180),"Activity"=gl(6,30,labels=activity.labels[,2]))
for (i in 3:68) {
UCI.HAR.tidy[,names(filtered.data)[i]]<-tapply(filtered.data[,i],filtered.data$id.activity,mean)
}
head(UCI.HAR.tidy)
?write.table
write.table(UCI.HAR.tidy,"UCI HAR averages tidy.txt",row.names=F)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
